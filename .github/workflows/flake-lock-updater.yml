name: Update flake.lock

on:
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-flake-lock:
    name: Update flake.lock
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: DeterminateSystems/nix-installer-action@main
      
      - uses: DeterminateSystems/magic-nix-cache-action@main
      
      - uses: cachix/cachix-action@v14
        with:
          name: axios
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      
      - name: Update flake.lock
        id: update
        run: |
          nix flake update
          
          # Check if anything changed
          if git diff --quiet flake.lock; then
            echo "No changes to flake.lock"
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            echo "flake.lock was updated"
            echo "updated=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Validate flake after update
        if: steps.update.outputs.updated == 'true'
        run: |
          echo "üîç Validating flake structure..."
          nix flake check --all-systems --no-update-lock-file
          
          echo "‚úÖ Flake check passed"
          echo ""
          echo "‚ö†Ô∏è  NOTE: Flake check only validates structure, not actual builds."
          echo "Manual testing with ./scripts/test-pr.sh is REQUIRED."
      
      - name: Show flake metadata
        if: steps.update.outputs.updated == 'true'
        run: |
          echo "üìä Flake metadata:"
          nix flake metadata
      
      - name: Create Pull Request
        if: steps.update.outputs.updated == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update flake.lock"
          title: "chore: update flake.lock"
          body: |
            Automated flake.lock update
            
            ## ‚úÖ CI Validation
            - ‚úÖ Flake structure validated (`nix flake check`)
            
            ## ‚ö†Ô∏è IMPORTANT: Manual Testing Required
            
            **CI does NOT test actual builds or NixOS modules.**
            
            You **MUST** run the validation script before merging:
            
            ```bash
            cd ~/Projects/axios
            gh pr checkout ${{ github.event.pull_request.number }}
            ./scripts/test-pr.sh
            ```
            
            The validation script:
            - ‚úÖ Tests flake structure
            - ‚úÖ Builds a real NixOS configuration
            - ‚úÖ Catches dependency conflicts (like niri/libdisplay-info)
            - ‚úÖ Tests with your actual system
            
            **Only merge if `./scripts/test-pr.sh` passes.**
            
            ## What Changed
            Review the flake.lock diff to see which inputs were updated.
            Pay special attention to:
            - Major version bumps in nixpkgs
            - Updates to critical packages (niri, home-manager, etc.)
            - Large numbers of input changes
            
            ## If Build Fails
            - Check upstream GitHub issues for affected packages
            - Wait for fixes before merging
            - Test again with `./scripts/test-pr.sh`
          branch: update_flake_lock_action
          delete-branch: true
          labels: |
            dependencies
            automated
